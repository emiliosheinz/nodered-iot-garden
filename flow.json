[
    {
        "id": "7f1f0b300687486f",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "591bf1f19ad5e29d",
        "type": "mqtt-broker",
        "name": "Hive MQhive mq",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "nodered-iot-garden-client",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b92b56e2b4f15792",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "53cd983c754bdca0",
        "type": "ui_tab",
        "name": "ðŸŒ± IoT Garden",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1862b367bc6c5f2b",
        "type": "ui_group",
        "name": "Garden soil parameters",
        "tab": "53cd983c754bdca0",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "489498c82727a17d",
        "type": "ui_group",
        "name": "Global Garden Config",
        "tab": "53cd983c754bdca0",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "491085ce43a6eb57",
        "type": "ui_tab",
        "name": "Global Config",
        "icon": "dashboard",
        "disabled": true,
        "hidden": true
    },
    {
        "id": "a6b0d256dcba7746",
        "type": "ui_group",
        "name": "Garden Air Parameters",
        "tab": "53cd983c754bdca0",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a847be77c0152f5",
        "type": "mqtt in",
        "z": "7f1f0b300687486f",
        "name": "",
        "topic": "iot-garden-parameters",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "591bf1f19ad5e29d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 440,
        "wires": [
            [
                "b05749f3bb42398d",
                "00005aaba021b093",
                "cfd23472fed9db12",
                "2cad277e58e9e83b",
                "2382a473aa2bfe3f",
                "300d38b1427fd1ed"
            ]
        ]
    },
    {
        "id": "b05749f3bb42398d",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "getSoilHumidity",
        "func": "const [, soilHumidity] = msg.payload.split(\",\").find((str = '') => str.startsWith('SOIL_HUMIDITY')).split(\" \")\n\nreturn {\n    payload: soilHumidity\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 360,
        "wires": [
            [
                "2ab225cca12ddaf6"
            ]
        ]
    },
    {
        "id": "00005aaba021b093",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "getAirHumidity",
        "func": "const [, airHumidity] = msg.payload.split(\",\").find((str = '') => str.startsWith('AIR_HUMIDITY')).split(\" \")\n\nreturn {\n    payload: airHumidity\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 440,
        "wires": [
            [
                "3d2d5b8711e515f4"
            ]
        ]
    },
    {
        "id": "cfd23472fed9db12",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "getAirTemperature",
        "func": "const [, airTemperature] = msg.payload.split(\",\").find((str = '') => str.startsWith('AIR_TEMPERATURE')).split(\" \")\n\nreturn {\n    payload: airTemperature\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 520,
        "wires": [
            [
                "8f60b450ef17c917"
            ]
        ]
    },
    {
        "id": "2ab225cca12ddaf6",
        "type": "ui_chart",
        "z": "7f1f0b300687486f",
        "name": "",
        "group": "1862b367bc6c5f2b",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Soil Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3d2d5b8711e515f4",
        "type": "ui_chart",
        "z": "7f1f0b300687486f",
        "name": "",
        "group": "a6b0d256dcba7746",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Air Himidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8f60b450ef17c917",
        "type": "ui_chart",
        "z": "7f1f0b300687486f",
        "name": "",
        "group": "a6b0d256dcba7746",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Air Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "57dbd8200a17bf76",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "isAnEmergency",
        "func": "const [data, maxHumidity, minHumidity] = msg.payload\n\nconst NOW = new Date().toISOString();\nconst PLACEHOLDER = \"{{PLACEHOLDER}}\";\n\nconst [, soilHumidity] = data.split(\",\").find((str = '') => str.startsWith('SOIL_HUMIDITY')).split(\" \")\n\nlet lowerOrHigherText;\nlet newMessage = {\n    topic: \"Alerta de Humidade da Horta\",\n    payload: `[${NOW}] Humidade do solo: ${soilHumidity}\\n A humidade do solo da horta estÃ¡ muito ${PLACEHOLDER} dos nÃ­veis esperados.`\n}\n\nif (soilHumidity < minHumidity) {\n    newMessage.payload = newMessage.payload.replace(PLACEHOLDER, \"abaixo\");\n    return newMessage;\n}\nif (soilHumidity > maxHumidity) {\n    newMessage.payload = newMessage.payload.replace(PLACEHOLDER, \"acima\");\n    return newMessage;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            [
                "50dd4eeba2032c74"
            ]
        ]
    },
    {
        "id": "50dd4eeba2032c74",
        "type": "e-mail",
        "z": "7f1f0b300687486f",
        "server": "smtp.office365.com",
        "port": "587",
        "secure": false,
        "tls": false,
        "name": "rafaelfumegalli@gmail.com",
        "dname": "",
        "x": 1260,
        "y": 160,
        "wires": []
    },
    {
        "id": "7c39bce24a84806b",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "parseMessage",
        "func": "return {\n    payload: `${msg.topic} ${msg.payload}`\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 700,
        "wires": [
            [
                "206f8c02492fb509"
            ]
        ]
    },
    {
        "id": "206f8c02492fb509",
        "type": "mqtt out",
        "z": "7f1f0b300687486f",
        "name": "iot-garden-global-config",
        "topic": "iot-garden-global-config",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "591bf1f19ad5e29d",
        "x": 1250,
        "y": 700,
        "wires": []
    },
    {
        "id": "4aa5ce8c8264ab20",
        "type": "ui_slider",
        "z": "7f1f0b300687486f",
        "name": "",
        "label": "Minimum Garden Humidity",
        "tooltip": "Minimum Garden Humidity",
        "group": "489498c82727a17d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "MIN_HUMIDITY",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "3a6b63c7d64807e5"
            ]
        ]
    },
    {
        "id": "d83bd56665c1daee",
        "type": "ui_slider",
        "z": "7f1f0b300687486f",
        "name": "",
        "label": "Maximum Garden Humidity",
        "tooltip": "Maximum Garden Humidity",
        "group": "489498c82727a17d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "MAX_HUMIDITY",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "3a6b63c7d64807e5"
            ]
        ]
    },
    {
        "id": "3a6b63c7d64807e5",
        "type": "file",
        "z": "7f1f0b300687486f",
        "name": "",
        "filename": "topic",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 760,
        "y": 700,
        "wires": [
            [
                "7c39bce24a84806b"
            ]
        ]
    },
    {
        "id": "dd9a4768c3fdae18",
        "type": "mqtt in",
        "z": "7f1f0b300687486f",
        "name": "",
        "topic": "get-iot-garden-global-config",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "591bf1f19ad5e29d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 580,
        "wires": [
            [
                "d5406fba21d6953e"
            ]
        ]
    },
    {
        "id": "d5406fba21d6953e",
        "type": "file in",
        "z": "7f1f0b300687486f",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "5031eeaa6659c20d"
            ]
        ]
    },
    {
        "id": "5031eeaa6659c20d",
        "type": "function",
        "z": "7f1f0b300687486f",
        "name": "parseMessage",
        "func": "return {\n    payload: `${msg.filename} ${msg.payload}`\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 640,
        "wires": [
            [
                "206f8c02492fb509"
            ]
        ]
    },
    {
        "id": "2cad277e58e9e83b",
        "type": "file in",
        "z": "7f1f0b300687486f",
        "name": "Read MAX_HUMIDITY",
        "filename": "MAX_HUMIDITY",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "300d38b1427fd1ed"
            ]
        ]
    },
    {
        "id": "2382a473aa2bfe3f",
        "type": "file in",
        "z": "7f1f0b300687486f",
        "name": "Read MIN_HUMIDITY",
        "filename": "MIN_HUMIDITY",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "300d38b1427fd1ed"
            ]
        ]
    },
    {
        "id": "300d38b1427fd1ed",
        "type": "join",
        "z": "7f1f0b300687486f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "57dbd8200a17bf76"
            ]
        ]
    }
]